containers:
  ubuntu:
    setup:
    - !Ubuntu xenial
    - !Install
      - gcc
      - libc6-dev
      - zlib1g-dev
      - libssl-dev
      - ca-certificates
    - !TarInstall
      url: https://static.rust-lang.org/dist/rust-1.12.0-x86_64-unknown-linux-gnu.tar.gz
      script: ./install.sh --prefix=/usr
    - !EnsureDir /cargo
    auto-clean: true
    environ:
      HOME: /work

  cargo-registry:
    setup:
    - !Container ubuntu
    - !EnsureDir /cargo
    - !Env
      CARGO_HOME: /cargo
    - !Depends Cargo.toml
    - !Sh |
        cargo install
    auto-clean: true
    data-dirs:
    - /cargo

  sphinx:
    setup:
    - !Alpine v3.4
    - !Repo edge/main
    - !Install [py-sphinx, py-imagesize, make]
    auto-clean: true

  httpbin:
    setup:
    - !Alpine v3.4
    - !PipConfig {dependencies: true}
    - !Py3Install
      - httpbin
      - gunicorn
    auto-clean: true

commands:

  rustc: !Command
    container: ubuntu
    description: Run rustc command
    run: [rustc]

  cargo: !Command
    container: ubuntu
    description: Run Cargo command
    run: [cargo]

  build: !Command
    container: ubuntu
    description: Build project
    run: [cargo, build]

  test: !Command
    container: ubuntu
    description: Test project
    run: [cargo, test]

  run: &run !Command
    container: ubuntu
    description: Run
    run:
    - cargo
    - run
    - "--"
    - --verbose
    - --config=example.yaml

  httpbin: &httpbin !Command
    container: httpbin
    description: Run httpbin instance
    run:
    - gunicorn
    - httpbin:app
    - -b
    - example.com:5000
    - --log-level
    - debug

  run-with-proxy: !Supervise
    description: Run swindon & httpbin
    children:
      httpbin: *httpbin
      swindon: *run

  _cargo-doc: !Command
    container: ubuntu
    description: build rust docs
    environ:
      CARGO_HOME: /cargo
    volumes:
      /cargo: !Snapshot { container: cargo-registry, size: 1G }
    run: |
      cargo doc --no-deps \
        -p swindon -p minihttp
  _copy-doc: !Command
    container: ubuntu
    description: copy rust docs into sphinx build dir
    prerequisites: [_cargo-doc]
    run: |
      mkdir -p docs/_build/html
      [ -d docs/_build/html/rust_api ] && rm -r docs/_build/html/rust_api
      cp -rT target/doc docs/_build/html/rust_api
  _cargo-new: !Command
    container: ubuntu
    description: Create New Crate lib
    work-dir: /work/deps
    run: [cargo, new, --vcs, git]
  docs: !Command
    container: sphinx
    description: Build documentation
    prerequisites: [_copy-doc]
    epilog: |
      ---------------------------------------------------
      Run this to open docs in browser:
      xdg-open $(pwd)/docs/_build/html/index.html
    work-dir: docs
    run: [make, html]
