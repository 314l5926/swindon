containers:
  ubuntu:
    setup:
    - !Ubuntu xenial
    - !Install
      - make
      - gcc
      - libc6-dev
      - zlib1g-dev
      - libssl-dev
      - libcurl4-openssl-dev
      - ca-certificates
      - libcurl3
      - pkg-config
    - !TarInstall
      url: https://static.rust-lang.org/dist/rust-1.14.0-x86_64-unknown-linux-gnu.tar.gz
      script: "./install.sh --prefix=/usr \
               --components=rustc,rust-std-x86_64-unknown-linux-gnu,cargo"
    - !EnsureDir /cargo
    # auto-clean: true
    environ:
      HOME: /work

  sphinx:
    setup:
    - !Alpine v3.4
    - !Repo edge/main
    # XXX: Alpine py*-shinx (1.4.8-r0) is broken â€” adds symlink but not source;
    - !Install [py2-sphinx, py2-imagesize, make]
    - !Py2Requirements "docs/requirements.txt"
    - !Sh |
        ln -s /usr/bin/sphinx-build-2 /usr/bin/sphinx-build
    auto-clean: true

  httpbin:
    setup:
    - !Alpine v3.4
    - !PipConfig {dependencies: true}
    - !Py3Install
      - httpbin
      - gunicorn
      - gevent
    auto-clean: true

  wrk:
    setup:
    - !Container ubuntu
    - !UbuntuUniverse
    - !Install
      - wrk

  message-board:  # example
    setup:
    - !Alpine v3.4
    - !Install [ca-certificates]
    - !PipConfig { dependencies: true }
    - !Py3Requirements "examples/message-board/requirements.txt"

  multi-user-chat:  # example
    setup:
    - !Alpine v3.4
    - !Install [ca-certificates]
    - !PipConfig { dependencies: true }
    - !Py3Requirements "examples/multi-user-chat/requirements.txt"
    - !NpmDependencies
      file: "examples/multi-user-chat/package.json"
    environ:
      NODE_PATH: /usr/lib/node_modules

commands:

  rustc: !Command
    container: ubuntu
    description: Run rustc command
    run: [rustc]

  cargo: !Command
    container: ubuntu
    description: Run Cargo command
    run: [cargo]

  make: !Command
    container: ubuntu
    description: Build project
    run: [cargo, build]

  test: !Command
    container: ubuntu
    description: Test project
    environ: { RUST_BACKTRACE: 1 }
    run: [cargo, test]

  ci-test: !Command
    container: ubuntu
    description: Run CI tests (with crates in container)
    environ:
      CARGO_HOME: /cargo
    volumes:
      /cargo: !Persistent { name: cargo }
    run: [cargo, test]

  run: &run !Command
    container: ubuntu
    description: Run
    environ:
      RUST_BACKTRACE: 1
    run:
    - cargo
    - run
    - --bin=swindon
    - "--"
    - --verbose
    - --config=example.yaml

  bench-run: &bench-run !Command
    container: ubuntu
    description: Run swindon for benchmarks (--release and specific config)
    environ:
      RUST_BACKTRACE: 1
    run:
    - cargo
    - run
    - --release
    - --bin=swindon
    - "--"
    - --verbose
    - --config=example.yaml

  devd: !Command
    container: ubuntu
    description: Run swindon-dev (useless without parameters)
    run:
    - cargo
    - run
    - --bin=swindon-dev
    - "--"

  debug-run: !Command
    container: ubuntu
    description: Run with debugging enabled
    run: |
      cargo build
      echo Starting...
      RUST_LOG=debug exec ./target/debug/swindon --config=example.yaml

  httpbin: &httpbin !Command
    container: httpbin
    description: Run httpbin instance
    run:
    - gunicorn
    - httpbin:app
    - -b
    - example.com:5000
    - --log-level
    - debug
    - -k
    - gevent

  run-with-proxy: !Supervise
    description: Run swindon & httpbin
    children:
      httpbin: *httpbin
      swindon: *run

  _cargo-doc: !Command
    container: ubuntu
    description: build rust docs
    environ:
      CARGO_HOME: /cargo
    volumes:
      /cargo: !Persistent { name: cargo }
    run: |
      cargo doc --no-deps
  _copy-doc: !Command
    container: ubuntu
    description: copy rust docs into sphinx build dir
    prerequisites: [_cargo-doc]
    run: |
      mkdir -p docs/_build/html
      [ -d docs/_build/html/rust_api ] && rm -r docs/_build/html/rust_api
      cp -rT target/doc docs/_build/html/rust_api
  _cargo-new: !Command
    container: ubuntu
    description: Create New Crate lib
    work-dir: /work/deps
    run: [cargo, new, --vcs, git]

  doc: !Command
    container: sphinx
    description: Build documentation
    prerequisites: [_copy-doc]
    epilog: |
      ---------------------------------------------------
      Run this to open docs in browser:
      xdg-open $(pwd)/docs/_build/html/index.html
    work-dir: docs
    run: [make, html]

  wrk: !Command
    container: wrk
    description: Run wrk tool
    run: [wrk]

  example-message-board: !Supervise
    description: Run swindon and message board example
    prerequisites: [make]
    children:
      swindon: !Command
        container: ubuntu
        work-dir: examples/message-board
        environ: { RUST_BACKTRACE: 1 }
        run:
        - ../../target/debug/swindon
        - --verbose
        - --config=swindon.yaml
      board: !Command
        container: message-board
        work-dir: examples/message-board
        environ:
          LISTEN_FDS: 1
        pass-tcp-socket: 127.0.0.1:8082
        run:
        - python3
        - -m
        - messageboard

  example-multi-user-chat: !Supervise
    description: Run swindon and multi-user-chat example
    prerequisites: [make]
    children:
      swindon: !Command
        container: ubuntu
        work-dir: examples/multi-user-chat
        environ: { RUST_BACKTRACE: 1 }
        run:
        - ../../target/debug/swindon
        - --verbose
        - --config=swindon.yaml
      chat: !Command
        container: multi-user-chat
        work-dir: examples/multi-user-chat
        run:
        - python3
        - -m
        - muc
      react-app: !Command
        container: multi-user-chat
        work-dir: examples/multi-user-chat
        run:
        - npm
        - start
